FROM docker.e-flamingo.net:5000/amd64/base:jessie

MAINTAINER Joel DeJesus "dejesus.joel@e-flamingo.net"

ARG proxy
ARG branch

ENV DEBIAN_FRONTEND noninteractive



RUN if [ -z ${proxy+x} ]; then echo "Going WITHOUT an apt proxy" 1>&2; else echo "Acquire::http::Proxy \"http://$proxy\";" > /etc/apt/apt.conf.d/proxy.conf && echo "Going WITH an apt proxy" 1>&2 ; fi 

RUN apt-get update && apt-get install -y sudo \
  libgtk2.0-0 libx11-xcb1 libxtst6 libxss1 libgconf-2-4 libnss3 \
  libasound2 libgl1-mesa-dev \
  git-core build-essential pkg-config unzip lib32z1 lib32ncurses5 lib32stdc++6 lib32gcc1 lib32tinfo5 libc6-i386 \
  libxtst6 libxrender1 libfreetype6 x11-apps oracle-java8-jdk maven dumb-init \
  autoconf automake debhelper build-essential libtool qemu-user-static debootstrap realpath pxz \
  locales && \
  echo "en_US.UTF-8 UTF-8" > /etc/locale.gen && locale-gen && \
  useradd -ms /bin/bash builder && usermod -aG sudo builder && \
  echo '%sudo   ALL=(ALL:ALL) ALL' > /etc/sudoers.d/020_builder

ENV LANG en_US.UTF-8

COPY docker/run.sh /usr/local/bin/run-bitcoinj

USER builder

COPY .git /usr/src/bitcoinj/.git

ENV JAVA_HOME /usr/lib/jvm/jdk-8-oracle-x64/jre

RUN mkdir /tmp/work && ( cd /usr/src/bitcoinj && git archive $branch | tar -xvf - -C /tmp/work ) && \
  ( cd /tmp/work/examples && mvn clean && mvn install ) || echo "problem with installing" 1>&2

WORKDIR /tmp/work/examples

ENTRYPOINT ["/usr/bin/dumb-init"]

CMD ["/usr/local/bin/run-bitcoinj"]
